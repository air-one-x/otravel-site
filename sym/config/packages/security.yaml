security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        addplaces:
            pattern:   ^/places/add
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        isLogged:
            pattern:   ^/isLogged
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # https://symfony.com/doc/current/security/impersonating_user.html
       
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/home, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/places, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/places/add, roles: ROLE_USER }
        - { path: ^/admin/[a-z]+(/(\d+)?)?$, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN }
        
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER